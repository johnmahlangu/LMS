/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.servlet;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Thokozani Mahlangu
 */
public class home extends javax.swing.JFrame 
{
    private final BooksDAO booksDAO;
    private final IssuedBookDAO issuedBookDAO;
    private final StudentsDAO studentsDAO;
    private final BookManager bookMan;
    private final StudentManager studentMan;
    
    /**
     * Creates new form home
     */
    
    public home() {
        this.booksDAO = new BooksDAO();
        this.issuedBookDAO = new IssuedBookDAO();
        this.studentsDAO = new StudentsDAO();
        this.bookMan = new BookManager(booksDAO);
        this.studentMan = new StudentManager(studentsDAO);
        initComponents();
        btnDeleteBook.setEnabled(false);
        btnUpdateBook.setEnabled(false);
        loadBooks();
        loadStudents();
        tableBooks.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                tableBooksMouseClicked(evt);
            }
        });
        tableStudents.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                tableStudentsMouseClicked(evt);
            } 
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnManageBooks = new javax.swing.JButton();
        btnManageStudents = new javax.swing.JButton();
        btnIssueBook = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        Parent = new javax.swing.JPanel();
        ManageBooksPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtPublisher = new javax.swing.JTextField();
        txtTitle = new javax.swing.JTextField();
        txtBookId = new javax.swing.JTextField();
        txtAuthor = new javax.swing.JTextField();
        txtISBN = new javax.swing.JTextField();
        txtPublicationYear = new javax.swing.JTextField();
        btnSaveBook = new javax.swing.JButton();
        btnUpdateBook = new javax.swing.JButton();
        btnDeleteBook = new javax.swing.JButton();
        btnClearBook = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableBooks = new javax.swing.JTable();
        txtSearchBooks = new javax.swing.JTextField();
        btnSearchBooks = new javax.swing.JButton();
        btnViewAllBooks = new javax.swing.JButton();
        ManageStudentsPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        txtFirstName = new javax.swing.JTextField();
        txtStudentId = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        btnSaveStudent = new javax.swing.JButton();
        btnClearStudent = new javax.swing.JButton();
        btnDeleteStudent = new javax.swing.JButton();
        btnUpdateStudent = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableStudents = new javax.swing.JTable();
        IssueBookPanel = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(51, 102, 255));

        btnManageBooks.setText("Manage Books");
        btnManageBooks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageBooksActionPerformed(evt);
            }
        });

        btnManageStudents.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnManageStudents.setText("Manage Students");
        btnManageStudents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageStudentsActionPerformed(evt);
            }
        });

        btnIssueBook.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnIssueBook.setText("Issue Book");

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton1.setText("Return Book");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(btnIssueBook)
                    .addComponent(btnManageBooks, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnManageStudents, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnIssueBook, btnManageBooks, btnManageStudents, jButton1});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(btnManageBooks, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(btnManageStudents, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(btnIssueBook)
                .addGap(45, 45, 45)
                .addComponent(jButton1)
                .addContainerGap(175, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnIssueBook, btnManageBooks, btnManageStudents, jButton1});

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 180, 550));

        Parent.setLayout(new java.awt.CardLayout());

        ManageBooksPanel.setBackground(new java.awt.Color(51, 51, 51));
        ManageBooksPanel.setMaximumSize(new java.awt.Dimension(5000, 32767));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 204, 204));
        jLabel5.setText("Book ID:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 204, 204));
        jLabel6.setText("Title:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(204, 204, 204));
        jLabel7.setText("Author:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(204, 204, 204));
        jLabel8.setText("Publisher:");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(204, 204, 204));
        jLabel9.setText("Publication Year:");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(204, 204, 204));
        jLabel10.setText("ISBN:");

        txtBookId.setEditable(false);
        txtBookId.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        txtBookId.setText("AUTO-GENERATED");

        btnSaveBook.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSaveBook.setText("Save");
        btnSaveBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveBookActionPerformed(evt);
            }
        });

        btnUpdateBook.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnUpdateBook.setText("Update");
        btnUpdateBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateBookActionPerformed(evt);
            }
        });

        btnDeleteBook.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnDeleteBook.setText("Delete");
        btnDeleteBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteBookActionPerformed(evt);
            }
        });

        btnClearBook.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnClearBook.setText("Clear");
        btnClearBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearBookActionPerformed(evt);
            }
        });

        tableBooks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "BookID", "Title", "Author", "Publisher", "Publication Year", "ISBN"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableBooks);
        if (tableBooks.getColumnModel().getColumnCount() > 0) {
            tableBooks.getColumnModel().getColumn(0).setResizable(false);
            tableBooks.getColumnModel().getColumn(1).setResizable(false);
            tableBooks.getColumnModel().getColumn(2).setResizable(false);
            tableBooks.getColumnModel().getColumn(3).setResizable(false);
            tableBooks.getColumnModel().getColumn(4).setResizable(false);
            tableBooks.getColumnModel().getColumn(5).setResizable(false);
        }

        txtSearchBooks.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N

        btnSearchBooks.setText("Search");
        btnSearchBooks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchBooksActionPerformed(evt);
            }
        });

        btnViewAllBooks.setText("View All Books");
        btnViewAllBooks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewAllBooksActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ManageBooksPanelLayout = new javax.swing.GroupLayout(ManageBooksPanel);
        ManageBooksPanel.setLayout(ManageBooksPanelLayout);
        ManageBooksPanelLayout.setHorizontalGroup(
            ManageBooksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ManageBooksPanelLayout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(ManageBooksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ManageBooksPanelLayout.createSequentialGroup()
                        .addGroup(ManageBooksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9))
                        .addGap(57, 57, 57)
                        .addGroup(ManageBooksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ManageBooksPanelLayout.createSequentialGroup()
                                .addGroup(ManageBooksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnSaveBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnDeleteBook, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE))
                                .addGap(49, 49, 49)
                                .addGroup(ManageBooksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnUpdateBook, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnClearBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(txtISBN, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(ManageBooksPanelLayout.createSequentialGroup()
                        .addGroup(ManageBooksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5))
                        .addGap(99, 99, 99)
                        .addGroup(ManageBooksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBookId, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPublicationYear, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ManageBooksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 549, Short.MAX_VALUE)
                    .addGroup(ManageBooksPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(txtSearchBooks, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSearchBooks)
                        .addGap(18, 18, 18)
                        .addComponent(btnViewAllBooks)))
                .addContainerGap())
        );

        ManageBooksPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnClearBook, btnDeleteBook, btnSaveBook, btnUpdateBook});

        ManageBooksPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtISBN, txtTitle});

        ManageBooksPanelLayout.setVerticalGroup(
            ManageBooksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ManageBooksPanelLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(ManageBooksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearchBooks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchBooks)
                    .addComponent(btnViewAllBooks))
                .addGap(18, 18, 18)
                .addGroup(ManageBooksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ManageBooksPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 439, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ManageBooksPanelLayout.createSequentialGroup()
                        .addGroup(ManageBooksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtBookId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(ManageBooksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(ManageBooksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(ManageBooksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(ManageBooksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtPublicationYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(ManageBooksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtISBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(ManageBooksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSaveBook, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdateBook))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(ManageBooksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDeleteBook, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnClearBook, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19))))
        );

        ManageBooksPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnClearBook, btnDeleteBook, btnSaveBook, btnUpdateBook});

        ManageBooksPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtPublicationYear, txtPublisher});

        Parent.add(ManageBooksPanel, "card3");

        ManageStudentsPanel.setPreferredSize(new java.awt.Dimension(760, 700));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("First Name:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Last Name:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Student ID:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Email Address:");

        txtStudentId.setEditable(false);
        txtStudentId.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        txtStudentId.setText("AUTO-GENERATED");

        btnSaveStudent.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSaveStudent.setText("Save");
        btnSaveStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveStudentActionPerformed(evt);
            }
        });

        btnClearStudent.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnClearStudent.setText("Clear");
        btnClearStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearStudentActionPerformed(evt);
            }
        });

        btnDeleteStudent.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnDeleteStudent.setText("Delete");
        btnDeleteStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteStudentActionPerformed(evt);
            }
        });

        btnUpdateStudent.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnUpdateStudent.setText("Update");
        btnUpdateStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateStudentActionPerformed(evt);
            }
        });

        tableStudents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Student ID", "First Name", "Last Name", "Email Address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableStudents);
        if (tableStudents.getColumnModel().getColumnCount() > 0) {
            tableStudents.getColumnModel().getColumn(0).setResizable(false);
            tableStudents.getColumnModel().getColumn(1).setResizable(false);
            tableStudents.getColumnModel().getColumn(2).setResizable(false);
            tableStudents.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout ManageStudentsPanelLayout = new javax.swing.GroupLayout(ManageStudentsPanel);
        ManageStudentsPanel.setLayout(ManageStudentsPanelLayout);
        ManageStudentsPanelLayout.setHorizontalGroup(
            ManageStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ManageStudentsPanelLayout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(ManageStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(65, 65, 65)
                .addGroup(ManageStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtLastName, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(ManageStudentsPanelLayout.createSequentialGroup()
                        .addComponent(btnSaveStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                        .addComponent(btnUpdateStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtFirstName, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(ManageStudentsPanelLayout.createSequentialGroup()
                        .addComponent(btnDeleteStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnClearStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtStudentId))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        ManageStudentsPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel2, jLabel3, jLabel4});

        ManageStudentsPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnClearStudent, btnSaveStudent});

        ManageStudentsPanelLayout.setVerticalGroup(
            ManageStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ManageStudentsPanelLayout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addGroup(ManageStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ManageStudentsPanelLayout.createSequentialGroup()
                        .addGroup(ManageStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtStudentId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(ManageStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(32, 32, 32)
                        .addGroup(ManageStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(ManageStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(ManageStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSaveStudent)
                            .addComponent(btnUpdateStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(ManageStudentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDeleteStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnClearStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        ManageStudentsPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, jLabel2, jLabel3, jLabel4});

        ManageStudentsPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnClearStudent, btnSaveStudent});

        Parent.add(ManageStudentsPanel, "card2");

        IssueBookPanel.setBackground(new java.awt.Color(51, 51, 51));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("Student ID:");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setText("Book ID:");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel13.setText("Issue Date:");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel14.setText("Due Date:");

        javax.swing.GroupLayout IssueBookPanelLayout = new javax.swing.GroupLayout(IssueBookPanel);
        IssueBookPanel.setLayout(IssueBookPanelLayout);
        IssueBookPanelLayout.setHorizontalGroup(
            IssueBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IssueBookPanelLayout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(IssueBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel13)
                    .addComponent(jLabel12)
                    .addComponent(jLabel11))
                .addGap(65, 65, 65)
                .addGroup(IssueBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                    .addComponent(jTextField2)
                    .addComponent(jTextField1)
                    .addComponent(jTextField4))
                .addContainerGap(654, Short.MAX_VALUE))
        );
        IssueBookPanelLayout.setVerticalGroup(
            IssueBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IssueBookPanelLayout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addGroup(IssueBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(IssueBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(IssueBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(IssueBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(236, Short.MAX_VALUE))
        );

        Parent.add(IssueBookPanel, "card4");

        getContentPane().add(Parent, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 0, 1020, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnManageBooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageBooksActionPerformed
        // TODO add your handling code here:
        Parent.removeAll();
        Parent.add(ManageBooksPanel);
        Parent.repaint();
        Parent.revalidate();
    }//GEN-LAST:event_btnManageBooksActionPerformed

    private void btnManageStudentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageStudentsActionPerformed
     
        Parent.removeAll();
        Parent.add(ManageStudentsPanel);
        Parent.repaint();
        Parent.revalidate();
    }//GEN-LAST:event_btnManageStudentsActionPerformed

    private void btnSaveBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveBookActionPerformed
        saveBook();
    }//GEN-LAST:event_btnSaveBookActionPerformed

    private void btnClearBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearBookActionPerformed
           clearBookDetails();
            btnSaveBook.setEnabled(true);
    }//GEN-LAST:event_btnClearBookActionPerformed

    private void btnUpdateBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateBookActionPerformed
        updateBook();
    }//GEN-LAST:event_btnUpdateBookActionPerformed

    private void btnDeleteBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteBookActionPerformed
        deleteBook();
    }//GEN-LAST:event_btnDeleteBookActionPerformed

    private void btnSaveStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveStudentActionPerformed
        saveStudent();
    }//GEN-LAST:event_btnSaveStudentActionPerformed

    private void btnSearchBooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchBooksActionPerformed
        searchBooks();
    }//GEN-LAST:event_btnSearchBooksActionPerformed

    private void btnViewAllBooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewAllBooksActionPerformed
        loadBooks();
    }//GEN-LAST:event_btnViewAllBooksActionPerformed

    private void btnUpdateStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateStudentActionPerformed
        updateStudent();
    }//GEN-LAST:event_btnUpdateStudentActionPerformed

    private void btnDeleteStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteStudentActionPerformed
        deleteStudent();
    }//GEN-LAST:event_btnDeleteStudentActionPerformed

    private void btnClearStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearStudentActionPerformed
        clearStudentDetails();
    }//GEN-LAST:event_btnClearStudentActionPerformed
    private Student getStudentDetails() {
        String firstName = txtFirstName.getText().trim();
        String lastName = txtLastName.getText().trim();
        String emailAddress = txtEmail.getText().trim();
        
        if (firstName.isEmpty() || lastName.isEmpty() || emailAddress.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill all fields.", "Error", JOptionPane.ERROR_MESSAGE);
            return null;
        }
        
        if (!firstName.matches("[a-zA-Z ]+") || !lastName.matches("[a-zA-Z ]+") || !emailAddress.matches("^(.+)@(.+)$")) {
            JOptionPane.showMessageDialog(this, "Please enter valid first name or last name or email address.", "Error", JOptionPane.ERROR_MESSAGE);
            return null;
        }
        
        return new Student(firstName, lastName, emailAddress);
    }
    
    private void saveStudent() {
        try {
            Student newStudent = getStudentDetails();
                        
            if (studentMan.studentExistsByEmail(newStudent.getEmail())) {
                JOptionPane.showMessageDialog(this, "Email address already exists.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }     
            studentMan.addStudent(newStudent.getFirstName(), newStudent.getLastName(), newStudent.getEmail());        
            loadStudents();
            clearStudentDetails();        
            JOptionPane.showMessageDialog(this, "Student added successfully.");       
        } catch (Exception e) {
            e.printStackTrace();
      }
    }
    
    private Book getBookDetails() {
        String title = txtTitle.getText().trim();
        String author = txtAuthor.getText().trim();
        String publisher = txtPublisher.getText().trim();
        String isbn = txtISBN.getText().trim();
        String publicationYearStr = txtPublicationYear.getText().trim();
        
        if (title.isEmpty() || author.isEmpty() || publisher.isEmpty() || isbn.isEmpty() || publicationYearStr.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill all fields.", "Error", JOptionPane.ERROR_MESSAGE);
            return null;
        }
        
        if (!title.matches("[a-zA-Z ]+") || !author.matches("[a-zA-Z ]+") || !publisher.matches("[a-zA-Z ]+")) {
            JOptionPane.showMessageDialog(this, "Please enter valid title or author or publisher.", "Error", JOptionPane.ERROR_MESSAGE);
            return null;
        }
        
        if (!isbn.matches("\\d{10}") && !isbn.matches("\\d{13}")) {
            JOptionPane.showMessageDialog(this, "ISBN should be 10 or 13 digits", "Error", JOptionPane.ERROR_MESSAGE);
            return null;
        }
        
        int publicationYear;
        
        try {
            publicationYear = Integer.parseInt(txtPublicationYear.getText());
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter valid year.", "Error", JOptionPane.ERROR_MESSAGE);
            return null;
        }
        
        Book book = new Book(author, title, publisher, publicationYear, isbn);
        return book;
    }
    
    private void searchBooks() {
        String keyword = txtSearchBooks.getText();
        List<Book> searchResult = bookMan.searchBook(keyword);
        
        DefaultTableModel model = (DefaultTableModel) tableBooks.getModel();
        
        
        if (searchResult.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No book(s) found with search criteria found.");
            //return;
        } 
        else 
        {
            model.setRowCount(0);
            
            for (Book book : searchResult) {
                model.addRow(new Object[]{book.getBookId(), book.getTitle(), book.getAuthor(), book.getPublisher(), book.getPublicationYear(), book.getISBN()});
            }
        }             
    }

    private void saveBook() {
        try {
            Book newBook = getBookDetails();
            
            if (bookMan.bookExistsByISBN(newBook.getISBN())) {
                JOptionPane.showMessageDialog(this, "ISBN already exists.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            bookMan.addNewBook(newBook.getAuthor(), newBook.getTitle(), newBook.getPublisher(), newBook.getPublicationYear(), newBook.getISBN());            
            loadBooks();          
            clearBookDetails();            
            JOptionPane.showMessageDialog(this, "Book added successfully.");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void updateBook() {
        try {
            Book updatedBook = getBookDetails();
            int bookId = Integer.parseInt(txtBookId.getText());
            
            bookMan.bookUpdate(bookId, updatedBook);
            
            loadBooks();
            clearBookDetails();
            btnSaveBook.setEnabled(true);           
            JOptionPane.showMessageDialog(this, "Book updated successfully.");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void updateStudent()
    {
        try {
            Student updatedStudent = getStudentDetails();
            int studentId = Integer.parseInt(txtStudentId.getText());
            
            studentMan.studentUpdate(studentId, updatedStudent);            
            loadStudents();
            clearStudentDetails();
            JOptionPane.showMessageDialog(this, "Student updated successfully");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void clearBookDetails() {
           txtBookId.setText("AUTO-GENERATED");
           txtTitle.setText("");
           txtAuthor.setText("");
           txtPublisher.setText("");
           txtISBN.setText("");
           txtPublicationYear.setText("");   
           btnSaveStudent.setEnabled(true);
    }
    
    private void clearStudentDetails() {
        txtStudentId.setText("AUTO-GENERATED");
        txtFirstName.setText("");
        txtLastName.setText("");
        txtEmail.setText("");
        btnSaveStudent.setEnabled(true);
    }
    
    private void deleteBook() {
        try {
            int bookId = Integer.parseInt(txtBookId.getText());        
            int dialogResult = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete book with book ID: " + bookId, "Confirmation", JOptionPane.YES_NO_OPTION);
            
            if (dialogResult == JOptionPane.YES_OPTION) {
                bookMan.deleteBook(bookId);    
                loadBooks();
                clearBookDetails();
                btnSaveBook.setEnabled(true);                
                JOptionPane.showMessageDialog(this, "Book deleted successfully.");
            } else {}
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void deleteStudent()
    {
        try {
            int studentId = Integer.parseInt(txtStudentId.getText());
            int dialogResult = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete student with student ID: " + studentId, "Confirmation", JOptionPane.YES_NO_OPTION);
           
            if (dialogResult == JOptionPane.YES_OPTION) {
                studentMan.deleteStudent(studentId);
                loadStudents();
                clearStudentDetails();
                btnSaveStudent.setEnabled(true);
                JOptionPane.showMessageDialog(this, "Student deleted successfully.");                
            } else {}
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
        
    private void loadBooks() 
    {
        try {
            List<Book> books = bookMan.displayAllBooks();
            
            DefaultTableModel model = (DefaultTableModel) tableBooks.getModel();
            model.setRowCount(0);
            
            for (Book book : books) {
                model.addRow(new Object[]{book.getBookId(), book.getTitle(), book.getAuthor(), book.getPublisher(), book.getPublicationYear(), book.getISBN()});
            }
            
            } catch (Exception e) {
                e.printStackTrace();        
        }      
    }
    private void loadStudents() 
    {
        try {
            List<Student> students = studentMan.displayAllStudents();
            
            DefaultTableModel model = (DefaultTableModel) tableStudents.getModel();
            model.setRowCount(0);
            
            for (Student student : students) {
                model.addRow(new Object[]{student.getStudentId(), student.getFirstName(), student.getLastName(), student.getEmail()});           
            }  
            
            } catch (Exception e) {
                    e.printStackTrace();
            }           
    }
    
    private void tableBooksMouseClicked(MouseEvent evt) {
        int selectedRow = tableBooks.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tableBooks.getModel();
        
        txtBookId.setText(model.getValueAt(selectedRow, 0).toString());
        txtTitle.setText(model.getValueAt(selectedRow, 1).toString());
        txtAuthor.setText(model.getValueAt(selectedRow, 2).toString());
        txtPublisher.setText(model.getValueAt(selectedRow, 3).toString());
        txtPublicationYear.setText(model.getValueAt(selectedRow, 4).toString());
        txtISBN.setText(model.getValueAt(selectedRow, 5).toString());
        btnSaveBook.setEnabled(false);
        btnDeleteBook.setEnabled(true);
        btnUpdateBook.setEnabled(true);
        
    }
    
    private void tableStudentsMouseClicked(MouseEvent evt) {
        int selectedRow = tableStudents.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tableStudents.getModel();
        
        txtStudentId.setText(model.getValueAt(selectedRow, 0).toString());
        txtFirstName.setText(model.getValueAt(selectedRow, 1).toString());
        txtLastName.setText(model.getValueAt(selectedRow, 2).toString());
        txtEmail.setText(model.getValueAt(selectedRow, 3).toString());
        btnSaveStudent.setEnabled(false);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        Runtime.getRuntime().addShutdownHook(new Thread(() -> {
            ConnectionDB.getInstance().closeConnection();
        }));
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel IssueBookPanel;
    private javax.swing.JPanel ManageBooksPanel;
    private javax.swing.JPanel ManageStudentsPanel;
    private javax.swing.JPanel Parent;
    private javax.swing.JButton btnClearBook;
    private javax.swing.JButton btnClearStudent;
    private javax.swing.JButton btnDeleteBook;
    private javax.swing.JButton btnDeleteStudent;
    private javax.swing.JButton btnIssueBook;
    private javax.swing.JButton btnManageBooks;
    private javax.swing.JButton btnManageStudents;
    private javax.swing.JButton btnSaveBook;
    private javax.swing.JButton btnSaveStudent;
    private javax.swing.JButton btnSearchBooks;
    private javax.swing.JButton btnUpdateBook;
    private javax.swing.JButton btnUpdateStudent;
    private javax.swing.JButton btnViewAllBooks;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTable tableBooks;
    private javax.swing.JTable tableStudents;
    private javax.swing.JTextField txtAuthor;
    private javax.swing.JTextField txtBookId;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtISBN;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtPublicationYear;
    private javax.swing.JTextField txtPublisher;
    private javax.swing.JTextField txtSearchBooks;
    private javax.swing.JTextField txtStudentId;
    private javax.swing.JTextField txtTitle;
    // End of variables declaration//GEN-END:variables
}
